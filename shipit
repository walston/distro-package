#! /usr/bin/env node
const yargs = require("yargs");
const handlePackage = require("./main");

const args = yargs
  .scriptName("package-shipit")
  .version()
  .pkgConf("shipit")
  .option("no-overwrite", {
    boolean: true,
    describe: "Terminates process rather than overwriting old target path",
    default: false
  })
  .option("use-file", {
    describe: "Use provided file as `package.json`",
    default: "package.json"
  })
  .option("copy-file", {
    alias: "c",
    array: true,
    string: true,
    describe: "Copy this file to target directory with package.json",
    example: "--copy-file=README.md -c=CHANGELOG.md"
  })
  .option("omit", {
    string: true,
    alias: "o",
    describe:
      "Omit certain keys/sub-keys from being included in the output package.json",
    example: "--omit=scripts,contributors",
    default: ""
  })
  .option("include", {
    string: true,
    alias: "i",
    describe: "Include keys/sub-keys in the output package.json",
    example: "--include=eslint,scripts.start,scripts.test",
    default: ""
  })
  .option("indent", {
    string: true,
    alias: "n",
    default: "tab",
    choices: ["2", "4", "tab"]
  }).argv;

const indent = (function(arg) {
  if (arg === "tab") return "\t";
  if (arg === "4") return "    ";
  return "  ";
})(args.indent);

const fileHandler = require("./files")(args._[0] || "dist");

async function main() {
  const pkg = await fileHandler.readPackage(args["use-file"]);
  const postage_options = {
    indent,
    include: args["include"].split(","),
    omit: args["omit"].split(",")
  };
  const publish_ready_package_json = handlePackage(pkg, postage_options);

  await fileHandler.writePackage(publish_ready_package_json);

  const files_to_copy = args["copy-file"];
  files_to_copy.forEach(p => fileHandler.copyFile(p));
}

main().catch(err => {
  console.error(err);
  process.exit(1);
});
